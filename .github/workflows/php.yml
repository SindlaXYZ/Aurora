name: PHP Composer

on:
    push:
        branches: [ "5.2" ]
    pull_request:
        branches: [ "5.2" ]

env:
    fail-fast: true
    PHPUNIT_FLAGS: "-v"
    SYMFONY_PHPUNIT_DIR: "$HOME/symfony-bridge/.phpunit"
    SYMFONY_REQUIRE: ">=5.2"
    working-directory: /home/runner/work/test

jobs:
    build:

        runs-on: ubuntu-latest

        steps:
            -   uses: actions/checkout@v2

#            -   name: "LL 1"
#                run: ls -a /home/runner/work/
#
#            -   name: "LL 2"
#                run: ls -a /home/runner/work/Aurora
#
#            -   name: "LL 3"
#                run: ls -a /home/runner/work/Aurora/Aurora

            #            -   name: "Install symfony"
            #                run: composer install symfony/website-skeleton:5.2

            -   name: "mkdir"
                run: mkdir -p /home/runner/work/test/vendor/sindla/aurora/

            -   name: "Copy A"
                run: cp -Rf /home/runner/work/Aurora/Aurora/* /home/runner/work/test/vendor/sindla/aurora/

            -   name: "Copy B"
                run: cp -Rf /home/runner/work/test/vendor/sindla/aurora/composer.json /home/runner/work/test/composer.json

            -   name: "Validate composer.json and composer.lock"
                run: composer validate
                working-directory: ${{env.working-directory}}

            #            -   name: "Cache Composer packages"
            #                id: composer-cache
            #                uses: actions/cache@v2
            #                with:
            #                    path: vendor
            #                    key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
            #                    restore-keys: |
            #                        ${{ runner.os }}-php-

            -   name: "Install dependencies"
                #                if: steps.composer-cache.outputs.cache-hit != 'true'
                run: composer install --prefer-dist --no-progress --no-suggest
                working-directory: ${{env.working-directory}}

            -   name: "Install PHPUnit"
                run: vendor/bin/simple-phpunit install
                working-directory: ${{env.working-directory}}

            -   name: "Simple PHPUnit version"
                run: vendor/bin/simple-phpunit --version
                working-directory: ${{env.working-directory}}

            -   name: "List"
                run: ls -a /home/runner/work/test/

            -   name: "List vendor"
                run: ls -a /home/runner/work/test/vendor/

            -   name: "Run tests"
                #run: vendor/bin/simple-phpunit ${{ env.PHPUNIT_FLAGS }} vendor/sindla/aurora/tests/Utils/Match/MatchTest.php --no-coverage
                run: vendor/bin/phpunit ${{ env.PHPUNIT_FLAGS }} ${{env.working-directory}}/vendor/sindla/aurora/tests/Utils/Match/MatchTest.php --no-coverage
                working-directory: ${{env.working-directory}}

        # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
        # Docs: https://getcomposer.org/doc/articles/scripts.md

        # - name: Run test suite
        #   run: composer run-script test